// Copyright 2022 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package sync

import (
	"context"

	"github.com/stack11/go-exactonline/api"
	"github.com/stack11/go-exactonline/types"
)

// SalesOrderSalesOrderHeadersEndpoint is responsible for communicating with
// the SalesOrderSalesOrderHeaders endpoint of the Sync service.
type SalesOrderSalesOrderHeadersEndpoint service

// SalesOrderSalesOrderHeaders:
// Service: Sync
// Entity: SalesOrderSalesOrderHeaders
// URL: /api/v1/{division}/sync/SalesOrder/SalesOrderHeaders
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=SyncSalesOrderSalesOrderHeaders
type SalesOrderSalesOrderHeaders struct {
	MetaData *api.MetaData `json:"__metadata,omitempty"`
	// Timestamp: Timestamp
	Timestamp *int64 `json:"Timestamp,omitempty"`

	// AmountDC: Amount in the default currency of the company
	AmountDC *float64 `json:"AmountDC,omitempty"`

	// AmountDiscount: Discount amount in the default currency of the company. Only supported for header
	AmountDiscount *float64 `json:"AmountDiscount,omitempty"`

	// AmountDiscountExclVat: Discount amount excluding VAT in the default currency of the company. Only supported for header
	AmountDiscountExclVat *float64 `json:"AmountDiscountExclVat,omitempty"`

	// AmountFC: Amount in the currency of the transaction
	AmountFC *float64 `json:"AmountFC,omitempty"`

	// AmountFCExclVat: Amount exclude VAT in the currency of the transaction. Only supported for header
	AmountFCExclVat *float64 `json:"AmountFCExclVat,omitempty"`

	// ApprovalStatus: Shows if this sales order is approved
	ApprovalStatus *int `json:"ApprovalStatus,omitempty"`

	// ApprovalStatusDescription: Description of ApprovalStatus
	ApprovalStatusDescription *string `json:"ApprovalStatusDescription,omitempty"`

	// Approved: Approval datetime
	Approved *types.Date `json:"Approved,omitempty"`

	// Approver: User who approved the sales order
	Approver *types.GUID `json:"Approver,omitempty"`

	// ApproverFullName: Name of approver
	ApproverFullName *string `json:"ApproverFullName,omitempty"`

	// Created: Creation date
	Created *types.Date `json:"Created,omitempty"`

	// Creator: User ID of creator
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// Currency: Currency code
	Currency *string `json:"Currency,omitempty"`

	// DeliverTo: Reference to the delivery customer. For an existing sales order this value can not be changed.
	DeliverTo *types.GUID `json:"DeliverTo,omitempty"`

	// DeliverToContactPerson: Reference to contact person of delivery customer
	DeliverToContactPerson *types.GUID `json:"DeliverToContactPerson,omitempty"`

	// DeliverToContactPersonFullName: Name of contact person of delivery customer
	DeliverToContactPersonFullName *string `json:"DeliverToContactPersonFullName,omitempty"`

	// DeliverToName: Name of delivery customer
	DeliverToName *string `json:"DeliverToName,omitempty"`

	// DeliveryAddress: Delivery address
	DeliveryAddress *types.GUID `json:"DeliveryAddress,omitempty"`

	// DeliveryDate: Delivery date of this line
	DeliveryDate *types.Date `json:"DeliveryDate,omitempty"`

	// DeliveryStatus: Shipping status of the sales order. 12=Open, 20=Partial, 21=Complete, 45=Cancelled
	DeliveryStatus *int `json:"DeliveryStatus,omitempty"`

	// DeliveryStatusDescription: Description of DeliveryStatus
	DeliveryStatusDescription *string `json:"DeliveryStatusDescription,omitempty"`

	// Description: Description
	Description *string `json:"Description,omitempty"`

	// Discount: Discount given on the default price. Discount = (DefaultPrice of Item - PriceItem in line) / DefaultPrice of Item
	Discount *float64 `json:"Discount,omitempty"`

	// Division: Division code
	Division *int `json:"Division,omitempty"`

	// Document: Document that is manually linked to the sales order
	Document *types.GUID `json:"Document,omitempty"`

	// DocumentNumber: Number of the document
	DocumentNumber *int `json:"DocumentNumber,omitempty"`

	// DocumentSubject: Subject of the document
	DocumentSubject *string `json:"DocumentSubject,omitempty"`

	// ID: Primary key
	ID *types.GUID `json:"ID,omitempty"`

	// IncotermAddress: Address of Incoterm
	IncotermAddress *string `json:"IncotermAddress,omitempty"`

	// IncotermCode: Code of Incoterm
	IncotermCode *string `json:"IncotermCode,omitempty"`

	// IncotermVersion: Version of Incoterm Supported version for Incoterms : 2010, 2020
	IncotermVersion *int `json:"IncotermVersion,omitempty"`

	// InvoiceStatus: Invoice status of the sales order. 12=Open, 20=Partial, 21=Complete, 45=Cancelled
	InvoiceStatus *int `json:"InvoiceStatus,omitempty"`

	// InvoiceStatusDescription: Description of InvoiceStatus
	InvoiceStatusDescription *string `json:"InvoiceStatusDescription,omitempty"`

	// InvoiceTo: Reference to the customer who will receive the invoice. For an existing sales order this value can not be changed.
	InvoiceTo *types.GUID `json:"InvoiceTo,omitempty"`

	// InvoiceToContactPerson: Reference to the contact person of the customer who will receive the invoice
	InvoiceToContactPerson *types.GUID `json:"InvoiceToContactPerson,omitempty"`

	// InvoiceToContactPersonFullName: Name of the contact person of the customer who will receive the invoice
	InvoiceToContactPersonFullName *string `json:"InvoiceToContactPersonFullName,omitempty"`

	// InvoiceToName: Name of the customer who will receive the invoice
	InvoiceToName *string `json:"InvoiceToName,omitempty"`

	// Modified: Last modified date
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: User ID of modifier
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// Notes: Extra notes
	Notes *string `json:"Notes,omitempty"`

	// OrderDate: Order date
	OrderDate *types.Date `json:"OrderDate,omitempty"`

	// OrderedBy: Customer who ordered the sales order. For an existing sales order this value can not be changed.
	OrderedBy *types.GUID `json:"OrderedBy,omitempty"`

	// OrderedByContactPerson: Contact person of the customer who ordered the sales order
	OrderedByContactPerson *types.GUID `json:"OrderedByContactPerson,omitempty"`

	// OrderedByContactPersonFullName: Name of contact person of the customer who ordered the sales order
	OrderedByContactPersonFullName *string `json:"OrderedByContactPersonFullName,omitempty"`

	// OrderedByName: Name of the customer who ordered the sales order
	OrderedByName *string `json:"OrderedByName,omitempty"`

	// OrderID: The OrderID identifies the sales order. All the lines of a sales order have the same OrderID
	OrderID *types.GUID `json:"OrderID,omitempty"`

	// OrderNumber: Number of sales order
	OrderNumber *int `json:"OrderNumber,omitempty"`

	// PaymentCondition: The payment condition used for due date and discount calculation
	PaymentCondition *string `json:"PaymentCondition,omitempty"`

	// PaymentConditionDescription: Description of PaymentCondition
	PaymentConditionDescription *string `json:"PaymentConditionDescription,omitempty"`

	// PaymentReference: Payment reference for sales order
	PaymentReference *string `json:"PaymentReference,omitempty"`

	// Project: The project to which the sales order line is linked. The project can be different per line. Sometimes also the project in the header is filled although this is not really used
	Project *types.GUID `json:"Project,omitempty"`

	// ProjectCode: Code of Project
	ProjectCode *string `json:"ProjectCode,omitempty"`

	// ProjectDescription: Description of Project
	ProjectDescription *string `json:"ProjectDescription,omitempty"`

	// Remarks: Extra remarks
	Remarks *string `json:"Remarks,omitempty"`

	// SalesChannel: ID of Sales channel.
	SalesChannel *types.GUID `json:"SalesChannel,omitempty"`

	// SalesChannelCode: Code of Sales channel
	SalesChannelCode *string `json:"SalesChannelCode,omitempty"`

	// SalesChannelDescription: Description of Sales channel
	SalesChannelDescription *string `json:"SalesChannelDescription,omitempty"`

	// Salesperson: Sales representative
	Salesperson *types.GUID `json:"Salesperson,omitempty"`

	// SalespersonFullName: Name of sales representative
	SalespersonFullName *string `json:"SalespersonFullName,omitempty"`

	// SelectionCode: ID of selection code
	SelectionCode *types.GUID `json:"SelectionCode,omitempty"`

	// SelectionCodeCode: Code of selection code
	SelectionCodeCode *string `json:"SelectionCodeCode,omitempty"`

	// SelectionCodeDescription: Description of selection code
	SelectionCodeDescription *string `json:"SelectionCodeDescription,omitempty"`

	// ShippingMethod: ShippingMethod
	ShippingMethod *types.GUID `json:"ShippingMethod,omitempty"`

	// ShippingMethodCode: Code of Shipping Method
	ShippingMethodCode *string `json:"ShippingMethodCode,omitempty"`

	// ShippingMethodDescription: Description of Shipping Method
	ShippingMethodDescription *string `json:"ShippingMethodDescription,omitempty"`

	// Status: The status of the sales order. 12 = Open, 20 = Partial, 21 = Complete, 45 = Cancelled.
	Status *int `json:"Status,omitempty"`

	// StatusDescription: Description of Status
	StatusDescription *string `json:"StatusDescription,omitempty"`

	// VATAmount: VAT amount in the currency of the transaction
	VATAmount *float64 `json:"VATAmount,omitempty"`

	// VATCode: VAT code
	VATCode *string `json:"VATCode,omitempty"`

	// VATCodeDescription: Description of VATCode
	VATCodeDescription *string `json:"VATCodeDescription,omitempty"`

	// WarehouseCode: Code of Warehouse
	WarehouseCode *string `json:"WarehouseCode,omitempty"`

	// WarehouseDescription: Description of Warehouse
	WarehouseDescription *string `json:"WarehouseDescription,omitempty"`

	// WarehouseID: Warehouse
	WarehouseID *types.GUID `json:"WarehouseID,omitempty"`

	// YourRef: The reference number of the customer
	YourRef *string `json:"YourRef,omitempty"`
}

func (e *SalesOrderSalesOrderHeaders) GetPrimary() *int64 {
	return e.Timestamp
}

func (s *SalesOrderSalesOrderHeadersEndpoint) UserHasRights(ctx context.Context, division int, method string) (bool, error) {
	return s.client.UserHasRights(ctx, division, "SalesOrder/SalesOrderHeaders", method)
}

// List the SalesOrderSalesOrderHeaders entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *SalesOrderSalesOrderHeadersEndpoint) List(ctx context.Context, division int, all bool, o *api.ListOptions) ([]*SalesOrderSalesOrderHeaders, error) {
	var entities []*SalesOrderSalesOrderHeaders
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/SalesOrder/SalesOrderHeaders", division) // #nosec
	api.AddListOptionsToURL(u, o)

	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, err := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, &entities)
	return entities, err
}

// Get the SalesOrderSalesOrderHeaders entitiy in the provided division.
func (s *SalesOrderSalesOrderHeadersEndpoint) Get(ctx context.Context, division int, id *int64) (*SalesOrderSalesOrderHeaders, error) {
	b, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/SalesOrder/SalesOrderHeaders", division) // #nosec
	u, err := api.AddOdataKeyToURL(b, id)
	if err != nil {
		return nil, err
	}

	e := &SalesOrderSalesOrderHeaders{}
	_, _, requestError := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, e)
	return e, requestError
}
