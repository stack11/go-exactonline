// Copyright 2022 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package bulk

import (
	"context"

	"github.com/stack11/go-exactonline/api"
	"github.com/stack11/go-exactonline/types"
)

// CRMQuotationsEndpoint is responsible for communicating with
// the CRMQuotations endpoint of the Bulk service.
type CRMQuotationsEndpoint service

// CRMQuotations:
// Service: Bulk
// Entity: CRMQuotations
// URL: /api/v1/{division}/bulk/CRM/Quotations
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=BulkCRMQuotations
type CRMQuotations struct {
	MetaData *api.MetaData `json:"__metadata,omitempty"`
	// QuotationID: Identifier of the quotation
	QuotationID *types.GUID `json:"QuotationID,omitempty"`

	// AmountDC: Amount in the default currency of the company
	AmountDC *float64 `json:"AmountDC,omitempty"`

	// AmountDiscount: Discount Amount in the currency of the transaction
	AmountDiscount *float64 `json:"AmountDiscount,omitempty"`

	// AmountDiscountExclVat: Discount Amount excluding VAT in the currency of the transaction
	AmountDiscountExclVat *float64 `json:"AmountDiscountExclVat,omitempty"`

	// AmountFC: Amount in the currency of the transaction
	AmountFC *float64 `json:"AmountFC,omitempty"`

	// CloseDate: Date on which the customer accepted or rejected the quotation version
	CloseDate *types.Date `json:"CloseDate,omitempty"`

	// ClosingDate: Date on which you expect to close/win the deal
	ClosingDate *types.Date `json:"ClosingDate,omitempty"`

	// Created: Date and time on which the quotation was created
	Created *types.Date `json:"Created,omitempty"`

	// Creator: User ID of the creator
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Name of the creator
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// Currency: The currency of the quotation
	Currency *string `json:"Currency,omitempty"`

	// DeliveryAccount: The account where the items should delivered
	DeliveryAccount *types.GUID `json:"DeliveryAccount,omitempty"`

	// DeliveryAccountCode: The code of the delivery account
	DeliveryAccountCode *string `json:"DeliveryAccountCode,omitempty"`

	// DeliveryAccountContact: The contact person of the delivery account
	DeliveryAccountContact *types.GUID `json:"DeliveryAccountContact,omitempty"`

	// DeliveryAccountContactFullName: Full name of the delivery account contact person
	DeliveryAccountContactFullName *string `json:"DeliveryAccountContactFullName,omitempty"`

	// DeliveryAccountName: The name of the delivery account
	DeliveryAccountName *string `json:"DeliveryAccountName,omitempty"`

	// DeliveryAddress: The id of the delivery address
	DeliveryAddress *types.GUID `json:"DeliveryAddress,omitempty"`

	// DeliveryDate: The date of the delivery
	DeliveryDate *types.Date `json:"DeliveryDate,omitempty"`

	// Description: The description of the quotation
	Description *string `json:"Description,omitempty"`

	// Division: Division code
	Division *int `json:"Division,omitempty"`

	// Document: Document linked to the quotation
	Document *types.GUID `json:"Document,omitempty"`

	// DocumentSubject: The subject of the document
	DocumentSubject *string `json:"DocumentSubject,omitempty"`

	// DueDate: Date after which the quotation is no longer valid
	DueDate *types.Date `json:"DueDate,omitempty"`

	// IncotermAddress: Address of Incoterm
	IncotermAddress *string `json:"IncotermAddress,omitempty"`

	// IncotermCode: Code of Incoterm
	IncotermCode *string `json:"IncotermCode,omitempty"`

	// IncotermVersion: Version of Incoterm Supported version for Incoterms : 2010, 2020
	IncotermVersion *int `json:"IncotermVersion,omitempty"`

	// InvoiceAccount: The account to which the invoice is sent
	InvoiceAccount *types.GUID `json:"InvoiceAccount,omitempty"`

	// InvoiceAccountCode: The code of the invoice account
	InvoiceAccountCode *string `json:"InvoiceAccountCode,omitempty"`

	// InvoiceAccountContact: The contact person of the invoice account
	InvoiceAccountContact *types.GUID `json:"InvoiceAccountContact,omitempty"`

	// InvoiceAccountContactFullName: Full name of the invoice account contact person
	InvoiceAccountContactFullName *string `json:"InvoiceAccountContactFullName,omitempty"`

	// InvoiceAccountName: The name of the invoice account
	InvoiceAccountName *string `json:"InvoiceAccountName,omitempty"`

	// Modified: Date and time on which the quotation was last modified
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: User ID of the modifier
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Name of the modifier
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// Opportunity: Opportunity linked to the quotation
	Opportunity *types.GUID `json:"Opportunity,omitempty"`

	// OpportunityName: The name of the opportunity
	OpportunityName *string `json:"OpportunityName,omitempty"`

	// OrderAccount: The account that requested the quotation
	OrderAccount *types.GUID `json:"OrderAccount,omitempty"`

	// OrderAccountCode: The code of the order account
	OrderAccountCode *string `json:"OrderAccountCode,omitempty"`

	// OrderAccountContact: The contact person of the order account
	OrderAccountContact *types.GUID `json:"OrderAccountContact,omitempty"`

	// OrderAccountContactFullName: Full name of the order account contact person
	OrderAccountContactFullName *string `json:"OrderAccountContactFullName,omitempty"`

	// OrderAccountName: The name of the order account
	OrderAccountName *string `json:"OrderAccountName,omitempty"`

	// PaymentCondition: Payment condition code
	PaymentCondition *string `json:"PaymentCondition,omitempty"`

	// PaymentConditionDescription: Payment condition description
	PaymentConditionDescription *string `json:"PaymentConditionDescription,omitempty"`

	// Project: The project linked to the quotation
	Project *types.GUID `json:"Project,omitempty"`

	// ProjectCode: The code of the project
	ProjectCode *string `json:"ProjectCode,omitempty"`

	// ProjectDescription: The description of the project
	ProjectDescription *string `json:"ProjectDescription,omitempty"`

	// QuotationDate: Date on which the quotation version is entered or printed. Both during entering and printing this date can be adjusted
	QuotationDate *types.Date `json:"QuotationDate,omitempty"`

	// QuotationNumber: Unique number to indentify the quotation. By default this number is based on the setting for first available number
	QuotationNumber *int `json:"QuotationNumber,omitempty"`

	// Remarks: Extra text that can be added to the quotation
	Remarks *string `json:"Remarks,omitempty"`

	// SalesChannel: ID of Sales channel.
	SalesChannel *types.GUID `json:"SalesChannel,omitempty"`

	// SalesChannelCode: Code of Sales channel.
	SalesChannelCode *string `json:"SalesChannelCode,omitempty"`

	// SalesChannelDescription: Description of Sales channel.
	SalesChannelDescription *string `json:"SalesChannelDescription,omitempty"`

	// SalesPerson: The user that is responsible for the quotation version
	SalesPerson *types.GUID `json:"SalesPerson,omitempty"`

	// SalesPersonFullName: Full name of the sales person
	SalesPersonFullName *string `json:"SalesPersonFullName,omitempty"`

	// SelectionCode: ID of selection code. Only supported by the Plus, Professional and Premium for Wholesale &amp; Distribution and Manufacturing
	SelectionCode *types.GUID `json:"SelectionCode,omitempty"`

	// SelectionCodeCode: Code of selection code
	SelectionCodeCode *string `json:"SelectionCodeCode,omitempty"`

	// SelectionCodeDescription: Description of selection code
	SelectionCodeDescription *string `json:"SelectionCodeDescription,omitempty"`

	// ShippingMethod: Shipping method ID
	ShippingMethod *types.GUID `json:"ShippingMethod,omitempty"`

	// ShippingMethodDescription: Shipping method description
	ShippingMethodDescription *string `json:"ShippingMethodDescription,omitempty"`

	// Status: The status of the quotation version. 5 = Rejected, 6 = Reviewed and closed, 10 = Recovery, 20 = Draft, 25 = Open, 35 = Processing... , 40 = Printed, 50 = Accepted
	Status *int `json:"Status,omitempty"`

	// StatusDescription: The description of the status
	StatusDescription *string `json:"StatusDescription,omitempty"`

	// VATAmountFC: Total VAT amount in the currency of the transaction
	VATAmountFC *float64 `json:"VATAmountFC,omitempty"`

	// VersionNumber: Number indicating the different reviews which are made for the quotation
	VersionNumber *int `json:"VersionNumber,omitempty"`

	// YourRef: The number by which this quotation is identified by the order account
	YourRef *string `json:"YourRef,omitempty"`
}

func (e *CRMQuotations) GetPrimary() *types.GUID {
	return e.QuotationID
}

func (s *CRMQuotationsEndpoint) UserHasRights(ctx context.Context, division int, method string) (bool, error) {
	return s.client.UserHasRights(ctx, division, "CRM/Quotations", method)
}

// List the CRMQuotations entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *CRMQuotationsEndpoint) List(ctx context.Context, division int, all bool, o *api.ListOptions) ([]*CRMQuotations, error) {
	var entities []*CRMQuotations
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/bulk/CRM/Quotations", division) // #nosec
	api.AddListOptionsToURL(u, o)

	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, err := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, &entities)
	return entities, err
}

// Get the CRMQuotations entitiy in the provided division.
func (s *CRMQuotationsEndpoint) Get(ctx context.Context, division int, id *types.GUID) (*CRMQuotations, error) {
	b, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/bulk/CRM/Quotations", division) // #nosec
	u, err := api.AddOdataKeyToURL(b, id)
	if err != nil {
		return nil, err
	}

	e := &CRMQuotations{}
	_, _, requestError := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, e)
	return e, requestError
}
